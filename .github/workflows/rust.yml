name: CI

on:
  push:
    branches: [ main ]
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
  pull_request:
    branches: [ main ]


env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ci
    - name: Install dependencies
      run: |
        sudo apt-get install libfreetype6-dev
    - name: Extract version from Cargo.toml
      run: |
        echo -n "CARGO_VERSION=$(sed -n -r 's/^version[[:blank:]]*=[[:blank:]]"(.*)"/v\1/p' Cargo.toml)" >> $GITHUB_ENV
    - name: Check if version in Cargo.toml and tag are the same
      if: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name != env.CARGO_VERSION }}
      run: |
          echo "$CARGO_VERSION is not ${{ github.ref_name }}"
          exit 1
    - name: Annotate commit with clippy warnings
      run: cargo clippy --all-features --all --all-targets --tests -- -Dwarnings
    - name: Check for correct formatting
      run: cargo fmt --check
    - name: Cargo deny
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check all
        rust-version: "1.83.0"
  
  build_docs:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: stable
        - name: Rust Cache
          uses: Swatinem/rust-cache@v2
          with:
            shared-key: ci
        - run: cargo install mdbook
        - run: mdbook build doc
        - uses: JamesIves/github-pages-deploy-action@v4
          if: ${{ github.event_name != 'pull_request' || startsWith(github.ref, 'refs/tags/') }} 
          with:
            branch: gh-pages # The branch the action should deploy to.
            folder: doc/book # The folder the action should deploy.

  build_test_deploy:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ci
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libfreetype6-dev
    - name: Patch version for pre-release
      id: githash
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      shell: bash
      run: |
        echo "GSN2X_VERSION=${GITHUB_SHA::6}" >> $GITHUB_OUTPUT
    - name: Test
      run: cargo test --verbose
    - name: Release build
      env:
        GSN2X_VERSION: ${{ steps.githash.outputs.GSN2X_VERSION }}
      run: cargo build --release --verbose
    - name: Copy binaries
      if: hashFiles('target/release/gsn2x')
      run: |
        cp target/release/gsn2x gsn2x-${{ runner.os }}
    - name: Copy binaries (Windows)
      if: hashFiles('target/release/gsn2x.exe')
      run: |
        copy target/release/gsn2x.exe gsn2x-${{ runner.os }}.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gsn2x-${{ runner.os }}
        path: gsn2x-${{ runner.os }}*
  
  pre_release:
    needs: [build_test_deploy, check]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/') }} 

    steps:
    - name: Download MacOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-macOS
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-Linux
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-Windows
    - name: Deploy pre-release to github.com
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-build"
        prerelease: true
        title: "Latest build on commit"
        files: |
          gsn2x-*
 
  release:
    needs: [build_test_deploy, check]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    steps:
    - uses: actions/checkout@v4
    - name: Get the version
      id: get_version
      run: echo "name=VERSION::${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
    - name: Download MacOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-macOS
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-Linux
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: gsn2x-Windows
    - name: Deploy release to github.com
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ steps.get_version.outputs.VERSION }}
        prerelease: false
        title: ${{ steps.get_version.outputs.VERSION }}
        files: |
          gsn2x-*

  coverage:
    needs: [build_test_deploy, check]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: llvm-tools-preview
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ci
    - name: Coverage measurement
      continue-on-error: true
      run: |
         mkdir coverage
         cargo install cargo-llvm-cov
         cargo llvm-cov --tests --lcov --output-path=coverage/coverage.lcov
    - name: Upload to codecov
      uses: codecov/codecov-action@v4
      with:
        directory: coverage
        token: ${{ secrets.CODECOV_TOKEN }}

